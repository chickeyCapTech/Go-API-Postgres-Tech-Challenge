// Code generated by mockery v2.51.1. DO NOT EDIT.

package mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/chickey/blog/internal/models"
)

// BlogCreator is an autogenerated mock type for the blogCreator type
type BlogCreator struct {
	mock.Mock
}

type BlogCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *BlogCreator) EXPECT() *BlogCreator_Expecter {
	return &BlogCreator_Expecter{mock: &_m.Mock}
}

// CreateBlog provides a mock function with given fields: ctx, blog
func (_m *BlogCreator) CreateBlog(ctx context.Context, blog models.Blog) (models.Blog, error) {
	ret := _m.Called(ctx, blog)

	if len(ret) == 0 {
		panic("no return value specified for CreateBlog")
	}

	var r0 models.Blog
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Blog) (models.Blog, error)); ok {
		return rf(ctx, blog)
	}
	if rf, ok := ret.Get(0).(func(context.Context, models.Blog) models.Blog); ok {
		r0 = rf(ctx, blog)
	} else {
		r0 = ret.Get(0).(models.Blog)
	}

	if rf, ok := ret.Get(1).(func(context.Context, models.Blog) error); ok {
		r1 = rf(ctx, blog)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BlogCreator_CreateBlog_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBlog'
type BlogCreator_CreateBlog_Call struct {
	*mock.Call
}

// CreateBlog is a helper method to define mock.On call
//   - ctx context.Context
//   - blog models.Blog
func (_e *BlogCreator_Expecter) CreateBlog(ctx interface{}, blog interface{}) *BlogCreator_CreateBlog_Call {
	return &BlogCreator_CreateBlog_Call{Call: _e.mock.On("CreateBlog", ctx, blog)}
}

func (_c *BlogCreator_CreateBlog_Call) Run(run func(ctx context.Context, blog models.Blog)) *BlogCreator_CreateBlog_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(models.Blog))
	})
	return _c
}

func (_c *BlogCreator_CreateBlog_Call) Return(_a0 models.Blog, _a1 error) *BlogCreator_CreateBlog_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *BlogCreator_CreateBlog_Call) RunAndReturn(run func(context.Context, models.Blog) (models.Blog, error)) *BlogCreator_CreateBlog_Call {
	_c.Call.Return(run)
	return _c
}

// NewBlogCreator creates a new instance of BlogCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlogCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *BlogCreator {
	mock := &BlogCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
